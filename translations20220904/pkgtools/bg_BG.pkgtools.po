msgid ""
msgstr ""
"Project-Id-Version: slint\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-22 23:09+0100\n"
"PO-Revision-Date: 2022-02-01 20:32\n"
"Last-Translator: \n"
"Language-Team: Bulgarian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: bg_BG\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: slint\n"
"X-Crowdin-Project-ID: 442342\n"
"X-Crowdin-Language: bg\n"
"X-Crowdin-File: /pkgtools/pkgtools.po\n"
"X-Crowdin-File-ID: 32\n"

# File: INSCD, line: 233
# File: INShd, line: 92
# File: pkgtool, line: 398
#. failed to mount
msgid "MOUNT ERROR"
msgstr ""

# File: INSNFS, line: 61
# File: INSSMB, line: 61
# File: INShd, line: 58
# File: pkgtool, line: 355
msgid "SELECT SOURCE DIRECTORY"
msgstr ""

# File: explodepkg, line: 44
msgid "Usage: explodepkg package_name [package_name2, ...]\n\n"
"Explodes a Slackware compatible software package\n"
"(or any tar+{gzip,bzip2,lzma,xz archive) in the current directory.\n"
"Equivalent to (for each package listed):\n\n"
"  ( umask 000 ; cat package_name | COMPRESSOR -dc | tar xvf package_name )\n\n"
"Note: This should only be used for debugging or examining packages, not for \n"
"installing them.  It doesn't execute installation scripts or update the package\n"
"indexes in /var/log/packages and /var/log/scripts."
msgstr ""

# File: explodepkg, line: 61
#, sh-format
msgid "Exploding package $PKG in current directory:"
msgstr ""

# File: explodepkg, line: 95
msgid "An installation script was detected in ./install/doinst.sh, but\n"
"    was not executed."
msgstr ""

# File: installpkg, line: 113
#, sh-format
msgid "WARNING: pkgtools are unstable with tar > 1.13.\n"
"You should provide a \"tar-1.13\" in your $PATH"
msgstr ""

# File: installpkg, line: 120
msgid "Usage: installpkg [options] <package_filename>\n\n"
"Installpkg is used to install a .t{gz,bz,lz,xz} package like this:\n"
"   installpkg slackware-package-1.0.0-i486-1.tgz (or .tbz, .tlz, .txz)\n\n"
"options:      --warn (warn if files will be overwritten, but do not install)\n"
"              --root /mnt (install someplace else, like /mnt)\n"
"              --infobox (use dialog to draw an info box)\n"
"              --terse (display a one-line short description for install)\n"
"              --menu (confirm package installation with a menu)\n"
"              --md5sum (record the package's md5sum in the metadata file)\n"
msgstr ""

# File: installpkg, line: 258
#, sh-format
msgid "Cannot install $package:  file not found"
msgstr ""

# File: installpkg, line: 275
#, sh-format
msgid "Cannot install $package:  file does not end in .tgz, .tbz, .tlz, or .txz"
msgstr ""

# File: installpkg, line: 304
#, sh-format
msgid "Cannot install $package:  external compression utility $packagecompression missing"
msgstr ""

# File: installpkg, line: 327
#, sh-format
msgid "Verifying package $package_name."
msgstr ""

# File: installpkg, line: 335
#, sh-format
msgid "Unable to install $package:  tar archive is corrupt (tar returned error code $TARERROR)"
msgstr ""

# File: installpkg, line: 384
#, sh-format
msgid "Size: Compressed: ${COMPRESSED}, uncompressed: ${UNCOMPRESSED}."
msgstr ""

# File: installpkg, line: 409
#, sh-format
msgid "Installing package $package_name:"
msgstr ""

# File: installpkg, line: 411
msgid "PACKAGE DESCRIPTION:"
msgstr ""

# File: installpkg, line: 420
#. install infobox package
#, sh-format
msgid "Installing package $shortname $PMSG"
msgstr ""

# File: installpkg, line: 422
#. we must need a full menu:
#, sh-format
msgid "Package Name: $shortname $PMSG"
msgstr ""

# File: installpkg, line: 423
#, sh-format
msgid "Install package $shortname"
msgstr ""

# File: installpkg, line: 424
#, sh-format
msgid "Do not install package $shortname"
msgstr ""

# File: installpkg, line: 425
#, sh-format
msgid "Abort software installation completely"
msgstr ""

# File: installpkg, line: 469
#. Some dumb bunny built a package with something other than makepkg.  Bad!
#. Oh well.  Bound to happen.  Par for the course.  Fix it and move on...
msgid "WARNING:  Package has not been created with 'makepkg'"
msgstr ""

# File: installpkg, line: 485
#, sh-format
msgid "Executing install script for $package_name."
msgstr ""

# File: installpkg, line: 514
#, sh-format
msgid "Package $package_name installed."
msgstr ""

# File: makepkg, line: 53
#, sh-format
msgid "WARNING: pkgtools are unstable with tar > 1.13.\n"
"         You should provide a \"tar-1.13\" in your $PATH."
msgstr ""

# File: makepkg, line: 79
msgid "Usage: makepkg package_name.tgz\n"
"       (or: package_name.tbz, package_name.tlz, package_name.txz)\n\n"
"Makes a Slackware compatible package containing the contents of the current\n"
"and all subdirectories.  If symbolic links exist, they will be removed and\n"
"an installation script will be made to recreate them later. This script will\n"
"be called \"install/doinst.sh\". You may add any of your own ash-compatible\n"
"shell scripts to this file and rebuild the package if you wish.\n\n"
"options:  -l, --linkadd y|n (moves symlinks into doinst.sh: recommended)\n"
"          -p, --prepend (prepend rather than append symlinks to an existing\n"
"                         doinst.sh.  Useful to link libraries needed by\n"
"                         programs in the doinst.sh script)\n"
"          -c, --chown y|n (resets all permissions to root:root 755\n"
"                           - not generally recommended)\n\n"
"If these options are not set, makepkg will prompt as appropriate."
msgstr ""

# File: makepkg, line: 177
#, sh-format
msgid "ERROR:  gzip compression utility not found in $PATH."
msgstr ""

# File: makepkg, line: 184
#, sh-format
msgid "ERROR:  bzip2 compression utility not found in $PATH."
msgstr ""

# File: makepkg, line: 191
#, sh-format
msgid "ERROR:  lzma compression utility not found in $PATH."
msgstr ""

# File: makepkg, line: 198
#, sh-format
msgid "ERROR:  xz compression utility not found in $PATH."
msgstr ""

# File: makepkg, line: 206
msgid "Slackware package maker, version 3.141593."
msgstr ""

# File: makepkg, line: 209
msgid "Searching for symbolic links:"
msgstr ""

# File: makepkg, line: 222
msgid "Unless your existing installation script already contains the code\n"
"to create these links, you should append these lines to your existing\n"
"install script. Now's your chance. :^)\n\n"
"Would you like to add this stuff to the existing install script and\n"
"remove the symbolic links"
msgstr ""

# File: makepkg, line: 230
msgid "It is recommended that you make these lines your new installation script.\n\n"
"Would you like to make this stuff the install script for this package\n"
"and remove the symbolic links"
msgstr ""

# File: makepkg, line: 261
msgid "Removing symbolic links:"
msgstr ""

# File: makepkg, line: 267
msgid "Updating your ./install/doinst.sh (prepending symlinks)..."
msgstr ""

# File: makepkg, line: 270
msgid "Updating your ./install/doinst.sh..."
msgstr ""

# File: makepkg, line: 274
msgid "Creating your new ./install/doinst.sh..."
msgstr ""

# File: makepkg, line: 279
msgid "No symbolic links were found, so we won't make an installation script.\n"
"You can make your own later in ./install/doinst.sh and rebuild the\n"
"package if you like."
msgstr ""

# File: makepkg, line: 286
msgid "This next step is optional - you can set the directories in your package\n"
"to some sane permissions. If any of the directories in your package have\n"
"special permissions, then DO NOT reset them here!\n\n"
"Would you like to reset all directory permissions to 755 (drwxr-xr-x) and\n"
"directory ownerships to root.root"
msgstr ""

# File: makepkg, line: 312
#, sh-format
msgid "WARNING: $PWD is chmod $OLDROOTPERMS\n"
"temporarily changing to chmod 755"
msgstr ""

# File: makepkg, line: 319
#, sh-format
msgid "Creating Slackware package:  ${TARGET_NAME}/${TAR_NAME}.${EXTENSION}"
msgstr ""

# File: makepkg, line: 328
#, sh-format
msgid "ERROR:  gzip returned error code $ERRCODE -- makepkg failed."
msgstr ""

# File: makepkg, line: 336
#, sh-format
msgid "ERROR:  bzip2 returned error code $ERRCODE -- makepkg failed."
msgstr ""

# File: makepkg, line: 344
#, sh-format
msgid "ERROR:  lzma returned error code $ERRCODE -- makepkg failed."
msgstr ""

# File: makepkg, line: 352
#, sh-format
msgid "ERROR:  xz returned error code $ERRCODE -- makepkg failed."
msgstr ""

# File: makepkg, line: 360
#, sh-format
msgid "WARNING:  zero length file"
msgstr ""

# File: makepkg, line: 367
msgid "WARNING:  gzip test failed on"
msgstr ""

# File: makepkg, line: 378
msgid "WARNING:  /usr/share/man (with possibly not gzipped man pages) detected"
msgstr ""

# File: makepkg, line: 383
msgid "WARNING:  /usr/share/info (with possibly not gzipped info pages) detected"
msgstr ""

# File: makepkg, line: 388
msgid "WARNING:  site_perl directory detected (this is fine for a local package build)"
msgstr ""

# File: makepkg, line: 395
#, sh-format
msgid "Restoring permissions of $PWD to chmod $OLDROOTPERMS"
msgstr ""

# File: makepkg, line: 401
#, sh-format
msgid "Slackware package ${TARGET_NAME}/${TAR_NAME}.${EXTENSION} created."
msgstr ""

# File: pkgtool, line: 91
#. bad
msgid "\n"
"You can't run pkgtool from the rootdisk until you've mounted your Linux partitions beneath /mnt.  Here are some examples:\n\n"
"If your root partition is /dev/sda1 you would type:\n"
"mount /dev/sda1 /mnt\n\n"
"Now you can find a list of all your partitions in /mnt/etc/fstab.\n\n"
"Then, supposing your /usr partition is /dev/sda2, you must do this:\n"
"mount /dev/sda2 /mnt/usr\n\n"
"Please mount your Linux partitions and then run pkgtool again.\n\n"
msgstr ""

# File: pkgtool, line: 159
msgid "PACKAGE REMOVAL IN PROGRESS"
msgstr ""

# File: pkgtool, line: 160
#, sh-format
msgid "\n"
"Removing package $pkg_name.\n\n"
"Since each file must be checked against the contents of every other installed package to avoid wiping out areas of overlap, this process can take quite some time. If you would like to watch the progress, flip over to another virtual console and type: \n\n"
"tail -f $TMP/PKGTOOL.REMOVED"
msgstr ""

# File: pkgtool, line: 180
msgid "View information about package"
msgstr ""

# File: pkgtool, line: 193
msgid "Select\\/Unselect removing package"
msgstr ""

# File: pkgtool, line: 225
#, sh-format
msgid "Slint Package Tool (pkgtool version ${Version})"
msgstr ""

# File: pkgtool, line: 226
msgid "\n"
"Welcome to the Slint package tool\n\n"
"Which option would you like?"
msgstr ""

# File: pkgtool, line: 230
msgid "Install packages from the current directory"
msgstr ""

# File: pkgtool, line: 231
msgid "Install packages from some other directory"
msgstr ""

# File: pkgtool, line: 232
msgid "Remove packages that are currently installed"
msgstr ""

# File: pkgtool, line: 233
msgid "View the list of files contained in a package"
msgstr ""

# File: pkgtool, line: 234
msgid "Choose Slint installation scripts to run again"
msgstr ""

# File: pkgtool, line: 235
msgid "Exit Pkgtool"
msgstr ""

# File: pkgtool, line: 249
msgid "SELECT SYSTEM SETUP SCRIPTS"
msgstr ""

# File: pkgtool, line: 251
msgid "Please use the spacebar to select the setup scripts to run.  Hit enter when you are done selecting to run the scripts."
msgstr ""

# File: pkgtool, line: 259
#, sh-format
msgid "$BLURB"
msgstr ""

# File: pkgtool, line: 292
msgid "Please select the package you wish to view."
msgstr ""

# File: pkgtool, line: 302
#, sh-format
msgid "CONTENTS OF PACKAGE: $PkG"
msgstr ""

# File: pkgtool, line: 322
msgid "SELECT PACKAGES TO REMOVE"
msgstr ""

# File: pkgtool, line: 323
msgid "Please select the packages you wish to Remove. Use the spacebar to select packages to delete, and the UP/DOWN arrow keys to scroll up and down through the entire list."
msgstr ""

# File: pkgtool, line: 342
msgid "NO PACKAGES REMOVED"
msgstr ""

# File: pkgtool, line: 343
msgid "Hit OK to return to the main menu."
msgstr ""

# File: pkgtool, line: 345
msgid "PACKAGE REMOVAL COMPLETE"
msgstr ""

# File: pkgtool, line: 346
#, sh-format
msgid "The packages have been removed. A complete log of the files that were removed has been created in $TMP/PKGTOOL.REMOVED."
msgstr ""

# File: pkgtool, line: 355
msgid "Please enter the name of the directory that you wish to install packages from:"
msgstr ""

# File: pkgtool, line: 369
msgid "DIRECTORY NOT FOUND"
msgstr ""

# File: pkgtool, line: 369
#, sh-format
msgid "The directory you want to install from ($SOURCE_DIR) does not seem to exist. Please check the directory and then try again."
msgstr ""

# File: pkgtool, line: 393
#. The source should already be mounted, so we test it
#. the directory is missing
#, sh-format
msgid "Your source device cannot be accessed properly.\n\n"
"Please be sure that it is mounted on $SOURCE_DIR, and that the Slint disks are found in subdirectories of $SOURCE_DIR like specified."
msgstr ""

# File: pkgtool, line: 405
msgid "INSERT DISK"
msgstr ""

# File: pkgtool, line: 405
#, sh-format
msgid "Please insert disk $NumDisk and press ENTER to continue."
msgstr ""

# File: pkgtool, line: 408
msgid "Continue with the installation"
msgstr ""

# File: pkgtool, line: 409
msgid "Skip the current disk series"
msgstr ""

# File: pkgtool, line: 410
msgid "Abort the installation process"
msgstr ""

# File: pkgtool, line: 421
msgid "ABORTING"
msgstr ""

# File: pkgtool, line: 421
msgid "Aborting software installation."
msgstr ""

# File: pkgtool, line: 437
msgid "MOUNT PROBLEM "
msgstr ""

# File: pkgtool, line: 437
msgid "Media was not successfully mounted! Do you want to retry, or quit?"
msgstr ""

# File: pkgtool, line: 440
msgid "Try to mount the disk again"
msgstr ""

# File: pkgtool, line: 441
msgid "No, abort."
msgstr ""

# File: removepkg, line: 178
#, sh-format
msgid "  --> $ROOT/$FILE was found in another package. Skipping."
msgstr ""

# File: removepkg, line: 183
#, sh-format
msgid "WARNING: Nonexistent $ROOT/$FILE was found in another package. Skipping."
msgstr ""

# File: removepkg, line: 196
#, sh-format
msgid "  --> $ROOT/$LINK (symlink) was found in another package. Skipping."
msgstr ""

# File: removepkg, line: 199
#, sh-format
msgid "WARNING: Nonexistent $ROOT/$LINK (symlink) was found in another package. Skipping."
msgstr ""

# File: removepkg, line: 210
#, sh-format
msgid "WARNING: $ROOT/$FILE changed after package installation."
msgstr ""

# File: removepkg, line: 214
#, sh-format
msgid "  --> Deleting $ROOT/$FILE"
msgstr ""

# File: removepkg, line: 218
#, sh-format
msgid "  --> $ROOT/$FILE would be deleted"
msgstr ""

# File: removepkg, line: 223
#, sh-format
msgid "  --> $ROOT/$FILE no longer exists. Skipping."
msgstr ""

# File: removepkg, line: 236
#, sh-format
msgid "  --> Deleting symlink $ROOT/$LINK"
msgstr ""

# File: removepkg, line: 240
#, sh-format
msgid "  --> $ROOT/$LINK (symlink) would be deleted"
msgstr ""

# File: removepkg, line: 244
#, sh-format
msgid "  --> $ROOT/$LINK (symlink) no longer exists. Skipping."
msgstr ""

# File: removepkg, line: 256
#, sh-format
msgid "  --> Deleting empty directory $ROOT/$DIR"
msgstr ""

# File: removepkg, line: 260
#, sh-format
msgid "WARNING: Unique directory $ROOT/$DIR contains new files"
msgstr ""

# File: removepkg, line: 264
#, sh-format
msgid "  --> $ROOT/$DIR (dir) would be deleted if empty"
msgstr ""

# File: removepkg, line: 276
#, sh-format
msgid "  --> Deleting $ROOT/$FILE (fmt man page)"
msgstr ""

# File: removepkg, line: 280
#, sh-format
msgid "  --> $ROOT/$FILE (fmt man page) would be deleted"
msgstr ""

# File: removepkg, line: 330
#, sh-format
msgid "Removing package $ADM_DIR/packages/$PKGNAME..."
msgstr ""

# File: removepkg, line: 339
msgid "Removing files:"
msgstr ""

# File: removepkg, line: 387
#, sh-format
msgid "No such package: $ADM_DIR/packages/$PKGNAME. Can't remove."
msgstr ""

# File: removepkg, line: 394
# File: removepkg, line: 405
msgid "Usage:"
msgstr ""

# File: removepkg, line: 395
# File: removepkg, line: 405
msgid "packagename"
msgstr ""

# File: removepkg, line: 411
msgid "Only warning... not actually removing any files."
msgstr ""

# File: removepkg, line: 414
# File: removepkg, line: 423
#, sh-format
msgid "Package contents is copied to $PRES_DIR."
msgstr ""

# File: removepkg, line: 417
msgid "Here's what would be removed (and left behind) if you removed the package(s):"
msgstr ""

# File: startupmode, line: 14
msgid "Select the default startup mode"
msgstr ""

# File: startupmode, line: 15
msgid "Please choose the default startup mode: Console or Graphical.\n\n"
"In Console mode, you log in and type your first command in a console.\n"
"In this mode you can type \"startx\" to start the default desktop or windows manager, that you can also change typing \"xwmconfig\".\n\n"
"In Graphical mode, you choose the desktop or windows manager, that will be started as soon as you are identified.\n"
msgstr ""

# File: startupmode, line: 24
msgid "Start Linux in Console mode"
msgstr ""

# File: startupmode, line: 25
msgid "Start Linux in Graphical mode"
msgstr ""

# File: upgradepkg, line: 56
msgid "Usage: upgradepkg newpackage [newpackage2 ... ]\n"
"       upgradepkg oldpackage%newpackage [oldpackage2%newpackage2 ... ]\n"
"       \n"
"Upgradepkg upgrades a Slint package (.tgz, .tbz, .tlz, .txz) from an\n"
"older version to a newer one.  It does this by INSTALLING the new package\n"
"onto the system, and then REMOVING any files from the old package that\n"
"aren't in the new package.  If the old and new packages have the same\n"
"name, a single argument is all that is required.  If the packages have\n"
"different names, supply the name of the old package followed by a percent\n"
"symbol (%), then the name of the new package.  Do not add any extra\n"
"whitespace between pairs of old/new package names.\n\n"
"Before upgrading a package, save any configuration files (such as in /etc)\n"
"that you wish to keep.  Sometimes these will be preserved, but it depends\n"
"on the package.  If you want to force new versions of the config files\n"
"to be installed, remove the old ones manually prior to running upgradepkg.\n\n"
"To upgrade in a directory other than / (such as /mnt):  \n\n"
"   ROOT=/mnt upgradepkg package.tgz (or .tbz, .tlz, .txz)"
msgstr ""

# File: upgradepkg, line: 227
#, sh-format
msgid "Installing new package $INCOMINGDIR/$NNAME"
msgstr ""

# File: upgradepkg, line: 253
#, sh-format
msgid "$NEW would be skipped (already installed)."
msgstr ""

# File: upgradepkg, line: 258
#, sh-format
msgid "Skipping package $NEW (already installed)"
msgstr ""

# File: upgradepkg, line: 300
#, sh-format
msgid "Upgrading $OLD package using $INCOMINGDIR/$NNAME"
msgstr ""

# File: upgradepkg, line: 316
#, sh-format
msgid "ERROR:  Package $INCOMINGDIR/$NNAME did not install\n"
"correctly.  You may need to reinstall your old package\n"
"to avoid problems.  Make sure the new package is not\n"
"corrupted."
msgstr ""

# File: upgradepkg, line: 343
#, sh-format
msgid "Package $OLD upgraded with new package $INCOMINGDIR/$NNAME."
msgstr ""

